
. $(command -p find .. -maxdepth 3 -type f -name ifstdlib -print -quit)

:unwind_stack() {
    local script="${BASH_SOURCE[-1]}"
    local func="${FUNCNAME[-2]}"
    local lineno="${BASH_LINENO[-3]}"
    local stack="${script}:${func##*/}():${lineno}"
    local len="${#BASH_SOURCE[@]}"
    local newline="\n"
    for i in $(seq -2 -1 $(( -len + 4 ))); do
        script="${BASH_SOURCE[i]}"
        func="${FUNCNAME[(( i - 1 ))]}"
        lineno="${BASH_LINENO[(( i - 2 ))]}"
        newline="${newline}\t"
        stack="${stack}${newline}->${script}:${func##*/}():${lineno}"
    done
    echo "${stack}"
}

:log() {
    local message=( $(:args "$@") )
    local log_lvl="${message[0]}"; unset 'message[0]'
    local log_msg="${message[@]}"
    local log_json="{\"timestamp\": \"$(date +%s)\", \"pid\": \"$$\", \"level\": \"${log_lvl}\", \"message\": \"${log_msg}\", \"stack\": \"$(:unwind_stack)\"}"
    logger -p "user.${log_lvl,,}" -- "${log_json}"
    echo "${log_json}" | python -m json.tool | xargs -I {} echo -e {}
}

:debug() {
    if [[ "${DEBUG:-0}" -eq 1 ]]; then
        :log "DEBUG" $(:arg "$@")
    fi
}

:info() {
    :log "INFO" "$(:arg "$@")"
}

:warn() {
    :log "WARNING" $(:arg "$@")
}

:error() {
    :log "ERR" $(:arg "$@")
    exit 1
}

