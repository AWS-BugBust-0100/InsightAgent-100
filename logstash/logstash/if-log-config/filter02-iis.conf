filter {
  if [fields][log_type] == "iis" {
    # Parse timestamp from log message
    grok { 
	  match => { 
	    "message" => "^%{TIMESTAMP_ISO8601:ts}\s+%{IP:s_ip}\s+%{WORD:cs_method}\s+%{URIPATHPARAM:cs_uri_stem}\s+%{DATA:cs_uri_query}\s+%{POSINT:s_port}\s+%{DATA:cs_username}\s+%{IP:c_ip}\s+%{DATA:cs_user_agent}\s+%{DATA:cs_referer}\s+%{NONNEGINT:sc_status}\s+%{NONNEGINT:sc_substatus}\s+%{NONNEGINT:sc_win32_status}\s+%{NONNEGINT:time_taken}" 
	  } 
	}
    if "_grokparsefailure" in [tags] { drop { } }
	
	mutate {
	  add_field => {
        "[data][s-ip]" => "%{s_ip}"
		"[data][cs-method]" => "%{cs_method}"
        "[data][cs-uri-stem]" => "%{cs_uri_stem}"
        "[data][cs-uri-query]" => "%{cs_uri_query}"	
        "[data][s-port]" => "%{s_port}"	
        "[data][cs-username]" => "%{cs_username}"	
        "[data][c-ip]" => "%{c_ip}"	
        "[data][cs(User-Agent)]" => "%{cs_user_agent}"	
        "[data][cs(Referer)]" => "%{cs_referer}"	
        "[data][sc-status]" => "%{sc_status}"	
        "[data][sc-substatus]" => "%{sc_substatus}"	
        "[data][sc-win32-status]" => "%{sc_win32_status}"
        "[data][time-taken]" => "%{time_taken}"			
      } 
	}
	
    # Parse date string to timestamp object
    date {
      match => [ "ts", "yyyy-MM-dd HH:mm:ss", "ISO8601" ]
      target => "ts_event"
      #timezone => "UTC"
    }

    # Set instance name
    mutate {
      add_field => {
		"agent_type" => "LogStreaming"
		"project_name" => "<project_name>"
        "instance_name" => "%{[host][name]}"
      }
    }
  }
}