---
- name : Check Mandatory Variables For Install
  debug:
    msg:
      - ProjectName:{{ projectName | mandatory }}
      - UserName:{{ userName | mandatory }}
      - Sampling Interval:{{ samplingInterval | mandatory }}
      - Agent Type:{{ agentType | mandatory }}
      - License Key:{{ licenseKey | mandatory }}
- name: Install package dependencies - YUM
  become: yes
  become_flags: '-E'
  package:
    name: "{{item}}"
    state: latest
  with_items:
    - gcc
    - wget
    - libffi-devel
    - python-devel
    - openssl-devel
  when: ansible_pkg_mgr == 'yum'
- name: Install package dependencies - APT build-essential
  become: yes
  shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated build-essential"
  when: ansible_pkg_mgr == 'apt'
- name: Install package dependencies - APT libssl-dev
  become: yes
  shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated libssl-dev"
  when: ansible_pkg_mgr == 'apt'
- name: Install package dependencies - APT libffi-dev
  become: yes
  shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated libffi-dev"
  when: ansible_pkg_mgr == 'apt'
- name: Install package dependencies - APT python-dev
  become: yes
  shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated python-dev"
  when: ansible_pkg_mgr == 'apt'
- name: Install package dependencies - APT wget
  become: yes
  shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated wget"
  when: ansible_pkg_mgr == 'apt'
- name: Install package dependencies - Add Open SUSE Backports Repo
  become: yes
  shell: "http_proxy={{ http_proxy }} zypper rr openSUSE_Backports_SLE-12-SP2 && zypper addrepo http://download.opensuse.org/repositories/openSUSE:/Backports:/SLE-12-SP2/standard/openSUSE:Backports:SLE-12-SP2.repo"
  when: ansible_pkg_mgr == 'zypper'
- name: Install package dependencies - Add Open SUSE Server Monitoring Repo
  become: yes
  shell: "http_proxy={{ http_proxy }} zypper rr server_monitoring && zypper addrepo http://download.opensuse.org/repositories/server:monitoring/SLE_12_SP3/server:monitoring.repo"
  when: ansible_pkg_mgr == 'zypper'
- name: Install package dependencies - Add Open SUSE OSS Repo
  become: yes
  shell: "http_proxy={{ http_proxy }} zypper rr OpenSUSE-12.1-OSS && zypper ar http://download.opensuse.org/distribution/12.1/repo/oss/ OpenSUSE-12.1-OSS"
  when: ansible_pkg_mgr == 'zypper'
- name: Install package dependencies - Refresh Repos
  become: yes
  shell: "http_proxy={{ http_proxy }} zypper --no-gpg-checks refresh"
  when: ansible_pkg_mgr == 'zypper'
- name: Install package dependencies - Basis-Devel
  become: yes
  shell: "http_proxy={{ http_proxy }} zypper install --auto-agree-with-licenses -y --type pattern Basis-Devel"
  when: ansible_pkg_mgr == 'zypper'
- name: Install package dependencies - python-pip
  become: yes
  shell: "http_proxy={{ http_proxy }} zypper install --auto-agree-with-licenses -y python-pip"
  when: ansible_pkg_mgr == 'zypper'
# - name: Install package dependencies - pexpect
#   become: yes
#   shell: "http_proxy={{ http_proxy }} pip install pexpect"
#   when: ansible_pkg_mgr == 'zypper'
# - name: Case insensitve password string match
#   expect:
#     command: /bin/sh -c "http_proxy={{ http_proxy }} zypper install --auto-agree-with-licenses -y libyajl-devel"
#     responses:
#       "Choose from": "1"
#     echo: true
- name: Delete Old Tar Bundle for Agent
  become: yes
  file:
    state: absent
    path: "{{ansible_env.HOME}}/insightagent.tar.gz"
- name: Delete Old Agent Code
  become: yes
  file:
    state: absent
    path: "{{ansible_env.HOME}}/InsightAgent-master"
- name: Delete ifagent Cron Configuration
  become: yes
  file:
    state: absent
    path: /etc/cron.d/ifagent
- name: Copy Agent Code on Machines
  become: yes
  copy:
    src: ../files/insightagent.tar.gz
    dest: "{{ansible_env.HOME}}"
    owner: root
    group: root
    mode: 0644
- name: Untar the Agent Code
  unarchive:
    src: "{{ansible_env.HOME}}/insightagent.tar.gz"
    dest: "{{ansible_env.HOME}}"
    remote_src: True
- name: Create Python Virtual Environment for Agent
  command: ./deployment/checkpackages.sh -env
  args:
    chdir: "{{ansible_env.HOME}}/InsightAgent-master"
  when: ansible_pkg_mgr != 'zypper'
- name: Download pip packages for Agent
  shell: http_proxy={{ http_proxy }} pip install requests pyyaml
  when: ansible_pkg_mgr == 'zypper'
- name: Deploy cgroup Agent
  become: true
  shell: "unset http_proxy https_proxy && ./deployment/install.sh
    -i {{ projectName }}
    -u {{ userName }}
    -k {{ licenseKey }}
    -s {{ samplingInterval }}
    -t {{ agentType }}
    -w {{ reportingUrl }}"
  become: true
  args:
    chdir: "{{ansible_env.HOME}}/InsightAgent-master/"
- name: Delete Tar Bundle for Agent
  file:
    state: absent
    path: "{{ansible_env.HOME}}/insightagent.tar.gz"
