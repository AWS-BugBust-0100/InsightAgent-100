---
 - hosts: nodes
   environment:
     http_proxy: "{{ http_proxy }}"
   vars:
     projectName: "{{ ifProjectName }}"
     userName: "{{ ifUserName }}"
     samplingInterval: 60
     deploymentServerUrl: "{{ ifReportingUrl }}"
     licenseKey: "{{ ifLicenseKey }}"
     manual_start: "{{ manualStart }}"
     disable_td_proxy: "{{ disableTdProxy }}"
     default_oracle_path: "/u01/app/oracle/diag/rdbms/xe/XE/trace"
   vars_prompt:
   - name: "version"
     prompt: "Which td-agent parser do you want to install?\n1. Jetty logs(/opt/jetty/logs) \n2. System Logs(/var/log/messages) \n3. Oracle alert logs"
     default: '2'
   become: yes
   become_method: sudo
   tasks:
   - name: Get user defined oracle alert log path 
     pause:
      prompt: "Plase provide a path for oracle alert logs( Press Enter to keep default value: /u01/app/oracle/diag/rdbms/xe/XE/trace )\n"
     when: version == '3'
     register: alert_log_path
   - name: Set user defined oracle alert log path 
     set_fact:
      default_oracle_path: "{{ alert_log_path['user_input'] }}"
     when: version == '3' and alert_log_path['user_input']|length > 0
   - name: Show Log Path
     debug:
      msg: "{{ default_oracle_path }}"
     when: version == '3'
   - name: Curl insecure fix
     become: yes
     shell: "echo insecure >> ~/.curlrc"
   - name: Install package dependencies - APT wget
     become: yes
     shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated wget"
     when: ansible_pkg_mgr == 'apt'
   - name: Install package dependencies - APT python-software-properties
     become: yes
     ignore_errors: yes
     shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated python-software-properties"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Get TD gpg key
     become: yes
     shell: "http_proxy={{ http_proxy }} wget --no-check-certificate http://packages.treasuredata.com/GPG-KEY-td-agent -P {{ansible_env.HOME}}"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Add TD gpg key
     become: yes
     shell: cat {{ansible_env.HOME}}/GPG-KEY-td-agent | sudo apt-key add -
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Add TD repository
     become: yes
     shell: "http_proxy={{ http_proxy }} add-apt-repository 'deb http://packages.treasuredata.com/2/ubuntu/xenial/ xenial contrib'"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Update repo with td-agent info
     become: yes
     shell: "http_proxy={{ http_proxy }} apt-get update --allow-unauthenticated -y"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Install td-agent
     become: yes
     shell: "http_proxy={{ http_proxy }} apt-get install -y -f --allow-unauthenticated td-agent"
     when: ansible_pkg_mgr == 'apt'
   - name: td-agent | Install td-agent
     become: yes
     shell: "http_proxy={{ http_proxy }} curl -k -L https://toolbelt.treasuredata.com/sh/install-redhat-td-agent2.sh | sh"
     when: ansible_pkg_mgr == 'yum'
   - name: td-agent | Copy setup script
     become: yes
     template:
       src: files/td-agent-setup.sh
       dest: /tmp/td-agent-setup.sh
       mode: 0755
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | Run setup script
     become: yes
     shell: /tmp/td-agent-setup.sh
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | copy Insightfinder plugin
     become: yes
     copy:
       src: files/out_InsightFinder.rb
       dest: /etc/td-agent/plugin/out_InsightFinder.rb
       owner: root
       group: root
       mode: 0644
     when: ansible_pkg_mgr != 'zypper'
   - name: td-agent | copy Insightfinder plugin SUSE
     become: yes
     copy:
       src: files/out_InsightFinder.rb
       dest: /etc/fluent/plugin/out_InsightFinder.rb
       owner: root
       group: root
       mode: 0644
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | Modify Insightfinder plugin
     lineinfile:
       path: /etc/td-agent/plugin/out_InsightFinder.rb
       regexp: '@http = Net::HTTP.new'
       line: '@http = Net::HTTP.new(@uri.host, @uri.port, nil)'
       state: present
     when: ansible_pkg_mgr != 'zypper' and disable_td_proxy == 'yes'
   - name: td-agent | Modify Insightfinder plugin SUSE
     lineinfile:
       path: /etc/fluent/plugin/out_InsightFinder.rb
       regexp: '@http = Net::HTTP.new'
       line: '@http = Net::HTTP.new(@uri.host, @uri.port, nil)'
       state: present
     when: ansible_pkg_mgr == 'zypper' and disable_td_proxy == 'yes'
   - name: td-agent | Add config_file(syslog)
     become: yes
     template:
       src: files/td-agent.conf.syslog.template
       dest: /etc/td-agent/td-agent.conf
       mode: 0644
     when: ansible_pkg_mgr != 'zypper' and version == '2'
     tags:
     - td-agent-config
   - name: td-agent | Add config_file SUSE(syslog)
     become: yes
     template:
       src: files/td-agent.conf.syslog.template
       dest: /etc/fluent/fluent.conf
       mode: 0644
     when: ansible_pkg_mgr == 'zypper' and version == '2'
     tags:
     - td-agent-config
   - name: td-agent | Add config_file(jetty)
     become: yes
     template:
       src: files/td-agent.conf.jetty.template
       dest: /etc/td-agent/td-agent.conf
       mode: 0644
     when: ansible_pkg_mgr != 'zypper' and version == '1'
     tags:
     - td-agent-config
   - name: td-agent | Add config_file SUSE(jetty)
     become: yes
     template:
       src: files/td-agent.conf.jetty.template
       dest: /etc/fluent/fluent.conf
       mode: 0644
     when: ansible_pkg_mgr == 'zypper' and version == '1'
     tags:
     - td-agent-config
   - name: td-agent | Add config_file(oracle)
     become: yes
     template:
       src: files/td-agent.conf.oracle.template
       dest: /etc/td-agent/td-agent.conf
       mode: 0644
     when: ansible_pkg_mgr != 'zypper' and version == '3'
     tags:
     - td-agent-config
   - name: td-agent | Add config_file SUSE(oracle)
     become: yes
     template:
       src: files/td-agent.conf.oracle.template
       dest: /etc/fluent/fluent.conf
       mode: 0644
     when: ansible_pkg_mgr == 'zypper' and version == '3'
     tags:
     - td-agent-config
   - name: td-agent | check processes fluent
     become: yes
     shell: ps -ef | grep fluent | awk '{printf "%s ",$2}'
     register: awk_test
   - name: td-agent | Stop fluentd daemon
     become: yes
     shell: "kill -9 {{item}}"
     ignore_errors: yes
     with_items:
       - "{{ awk_test.stdout_lines }}"
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | check processes td-agent
     become: yes
     shell: ps -ef | grep td-agent | awk '{printf "%s ",$2}'
     register: td_process
     when: manual_start == 'yes' and ansible_pkg_mgr != 'zypper'
   - name: td-agent | Stop td-agent daemon
     become: yes
     shell: "kill -9 {{item}}"
     ignore_errors: yes
     with_items:
       - "{{ td_process.stdout_lines }}"
     when: manual_start == 'yes' and ansible_pkg_mgr != 'zypper'
  #  - name: td-agent | Install fluentd gem dependency
  #    become: yes
  #    shell: http_proxy={{ http_proxy }} bash -lc "fluent-gem install fluent-mixin-type-converter"
  #    when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | Start td-agent daemon
     become: yes
     shell: bash -lc "fluentd -c /etc/fluent/fluent.conf -p /etc/fluent/plugin/ -o /var/log/fluent/fluent.log -d /var/run/fluent/fluent.pid --use-v1-config"
     environment:
       PATH: "{{ ansible_env.PATH }}:/usr/local/rvm/gems/ruby-2.2.2/bin:/usr/local/rvm/gems/ruby-2.2.2@global/bin:/usr/local/rvm/rubies/ruby-2.2.2/bin:/usr/lib/mit/bin:/usr/local/rvm/bin"
     when: ansible_pkg_mgr == 'zypper'
   - name: td-agent | Start td-agent daemon(manual)
     become: yes
     shell: bash -lc "td-agent -c /etc/td-agent/td-agent.conf -p /etc/td-agent/plugin/ -o /var/log/td-agent/td-agent.log --use-v1-config &"
     async: 45
     poll: 0
     when: manual_start == 'yes' and ansible_pkg_mgr != 'zypper'
   - name: td-agent | Start td-agent daemon
     become: yes
     service:
      name: td-agent
      enabled: yes
      state: restarted
     when: manual_start == 'no' and ansible_pkg_mgr != 'zypper'
