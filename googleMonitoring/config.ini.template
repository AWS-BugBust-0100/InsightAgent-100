[insightFinder_vars]
# https://app.insightfinder.com
host_url = 
http_proxy = 
https_proxy = 
licenseKey = 
project_name = 
username = 
# number of retries for http requests in case of failure
retries = 
# time between retries
sleep_seconds = 

[googleMonitoring_vars]
# enter the path to the JSON file downloaded from Google Cloud with a project's service account's private key
service_key_json = 
http_proxy = 
https_proxy = 
project_id = 
# enter a list of metrics separated by comma(,) or a prefix/suffix to match from all the available metrics in the project (at least one is required)
# if list and regex are both provided, the list is given precedence and the regex param will be ignored
# example: compute.googleapis.com/instance/cpu/usage_time, compute.googleapis.com/instance/cpu/utilization, compute.googleapis.com/instance/disk/read_bytes_count, compute.googleapis.com/instance/disk/write_bytes_count
metrics_list = 
# example: compute.googleapis.com/instance/.* , .*/cpu/utilization
metrics_regex = 
# comma-separated priority list of labels to be used as IF instance name; at least one needs to valid and listed for a metric to be able to get corresponding data (required)
# example: instance_name, device_name
instance_field = 
# comma-separated priority list of labels to be used as IF container name (optional)
container_field = 
# enter a list of instance field label values separated by comma(,) or a prefix/suffix to match from all the available values in the project (optional)
# this filter is dynamically applied to whichever instance field label chosen from instance_field priority list
# if list and regex are both provided, the list is given precedence and the regex param will be ignored
# if neither is provided, no filtering is applied on selected instance field label
instance_field_list = 
instance_field_regex = 
# enter a list of resource types separated by comma(,) or a prefix/suffix to match from all the available resource types in the project (optional)
# if list and regex are both provided, the list is given precedence and the regex param will be ignored
# if neither is provided, no filtering is applied on resource type
resource_type_list = 
resource_type_regex = 
# enter a list of zones separated by comma(,) or a prefix/suffix to match from all the available zones in the project (optional)
# if list and regex are both provided, the list is given precedence and the regex param will be ignored
# if neither is provided, no filtering is applied on zone
zone_list = 
zone_regex = 

[agent_vars]
# time range for ingesting historical metric data; enter start and end times separated by comma (,); use the format YYYY-MM-DD HH:MM:SS
# example: 2021-11-01 00:00:00, 2021-11-15 00:00:00
# leave empty for live mode
historical_time_range = 
# used for live mode only; set value to be a little larger than the interval at which script is scheduled to run; value in minutes
query_interval = 
# sampling interval/frequency for data collection by the agent; should match the interval used in project settings on IF
sampling_interval = 1
# frequency at which the agent is ran; should match the interval used in cron
run_interval = 10
# number of threads to be used in the pool
thread_pool = 
# Maximum size of a data chunk to be sent to IF, in kilobytes
chunk_size_kb = 